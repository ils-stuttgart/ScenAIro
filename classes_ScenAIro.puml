@startuml classes_ScenAIro
skinparam classFontSize 12
skinparam classAttributeIconSize 0
skinparam wrapWidth 300
skinparam linetype ortho

set namespaceSeparator none
class "Angle" as scenairo.tools.RunwayCornerAnnotationStruct.Angle {
  bank : float
  pitch : float
  roll : float
  __init__(pitch: float, bank: float, roll: float)
  __repr__()
}
class "AutomatedRunwayTagging" as scenairo.tools.AutomatedRunwayTaggingCopy.AutomatedRunwayTagging {
  __init__()
  calculate_pixel_coordinates(point, horizontal_fov, vertical_fov, screen_width, screen_height)
  draw_points_on_existing_image(image_path, output_path, structured_objects, horizontal_fov_degrees, vertical_fov_degrees, screen_width, screen_height, cam_pitch, cam_yaw, cam_roll)
  rotate_point(vector, pitch, yaw, roll)
  save_annotation(screenshot_name, structured_objects, image_width, image_height, horizontal_fov_degrees, vertical_fov_degrees, output_dir)
}
class "ConeTransformer" as scenairo.tools.ConeTransformer.ConeTransformer {
  geod
  transform_points(points, center_lat, center_lon, center_alt, heading)
}
class "CoordSetter" as scenairo.tools.CoordSetter.CoordSetter {
  ae
  aq
  event_freeze_altitude
  event_freeze_lat_long
  event_pause
  simFrameDimensions
  sm
  __init__(sim)
  set_aircraft_values_and_screenshot(latitude, longitude, altitude, pitch, heading, roll, screenshot_path, window_width, window_height)
}
class "JSONManager" as scenairo.presentation.ScenAIroUI.JSONManager {
  load_from_file(filetypes)
  save_to_file(data, filetypes)
}
class "Point" as scenairo.tools.RunwayCornerAnnotationStruct.Point {
  x : float
  y : float
  z : float
  __init__(x: float, y: float, z: float)
  __repr__()
  __sub__(other)
}
class "PointCloudGenerator" as scenairo.tools.PointCloudGenerator.PointCloudGenerator {
  __init__()
  generate_cone(apex, lateral_angle_left, lateral_angle_right, vertical_min_angle, vertical_max_angle, max_distance, num_points, heading)
  transform_apex(apex, heading_rad)
}
class "RunwayCalc" as scenairo.tools.RunwayCalc.RunwayCalc {
  end_height
  icao_code
  name
  runway_attributes
  runway_center : dict
  runway_heading : float
  runway_length : float
  runway_name
  runway_width : float
  start_height
  __init__(name, icao_code, runway_name, runway_width, runway_length, runway_heading, center_lat, center_long, center_alt, start_height, end_height, runway_attributes)
  calculate_runway_corners()
  from_dict(data)
  load_from_file(filename)
  rotate_point(x, y, angle_rad)
  save_to_file(filename)
  to_dict()
}
class "RunwayCornerAnnotationStruct" as scenairo.tools.RunwayCornerAnnotationStruct.RunwayCornerAnnotationStruct {
  angles
  point
  structuredObjects
  __init__()
  calculate_geo_vector(airplaneCoord, cornerCoord, runwayHeading, centerHeight)
  create_structured_objects(point, runway_corners, angles, runwayHeading, centerHeight)
}
class "ScenAIro" as scenairo.ScenAIro.ScenAIro {
  _creating_data : bool
  airport
  angles : NoneType
  apex : tuple
  apex_transformed : ndarray
  coordsetter
  geo_points : NoneType
  lateral_angle_left : float
  lateral_angle_right : float
  max_distance : float
  pointCloudGeneration
  points : NoneType
  runwayCornerAnnotation
  tagging
  transformCone
  ui
  vertical_max_angle : float
  vertical_min_angle : float
  __init__()
  calculate_horizontal_fov(vertical_fov_degrees, aspect_ratio)
  calculate_vertical_fov(horizontal_fov_degrees, aspect_ratio)
  create_data()
  fill_fields(entry_fields, values)
  generate_and_transform_points()
  validate_float(value, field_name)
  validate_int(value, field_name)
}
class "ScenAIroUI" as scenairo.presentation.ScenAIroUI.ScenAIroUI {
  airport : NoneType
  airport_entries : dict
  angle_entries : dict
  apply_x : BooleanVar
  apply_y : BooleanVar
  ax
  canvas : FigureCanvasTkAgg
  dist_ax
  dist_canvas : FigureCanvasTkAgg
  dist_fig
  distribution_var : StringVar
  dummy_frame : LabelFrame
  fig
  jsonmanager
  labeling_var : BooleanVar
  left_frame : Frame
  parent
  plot_description : Text
  point_entries : dict
  right_frame : Frame
  right_frame_bottom : Frame
  right_frame_top : Frame
  segment_x : BooleanVar
  segment_y : BooleanVar
  segmentation_frame : LabelFrame
  segmentation_method : StringVar
  __init__(parent)
  adjust_plot_height()
  create_buttons(frame)
  create_input_section(title, fields, bg_color, parent, save_command, load_command)
  fill_fields(entry_fields, values)
  load_airport()
  load_angles()
  load_parameters()
  plot_cone_boundaries()
  plot_dummy_distribution()
  save_airport()
  save_angles()
  save_parameters()
  start_segmentation()
  update_plot(points, airport, apex)
}
class "SimFrameScout" as scenairo.tools.services.SimFrameScout.SimFrameScout {
  window : NoneType
  window_title : str
  __init__(window_title)
  find_window()
  get_aspect_ratio()
}
class "StructuredObject" as scenairo.tools.RunwayCornerAnnotationStruct.StructuredObject {
  A
  Angles
  B
  C
  D
  __init__(A, B, C, D, Angles)
  __repr__()
}
scenairo.presentation.ScenAIroUI.JSONManager --* scenairo.presentation.ScenAIroUI.ScenAIroUI : jsonmanager
scenairo.presentation.ScenAIroUI.ScenAIroUI --* scenairo.ScenAIro.ScenAIro : ui
scenairo.tools.AutomatedRunwayTaggingCopy.AutomatedRunwayTagging --* scenairo.ScenAIro.ScenAIro : tagging
scenairo.tools.ConeTransformer.ConeTransformer --* scenairo.ScenAIro.ScenAIro : transformCone
scenairo.tools.CoordSetter.CoordSetter --* scenairo.ScenAIro.ScenAIro : coordsetter
scenairo.tools.PointCloudGenerator.PointCloudGenerator --* scenairo.ScenAIro.ScenAIro : pointCloudGeneration
scenairo.tools.RunwayCalc.RunwayCalc --* scenairo.ScenAIro.ScenAIro : airport
scenairo.tools.RunwayCornerAnnotationStruct.Angle --* scenairo.tools.RunwayCornerAnnotationStruct.RunwayCornerAnnotationStruct : angles
scenairo.tools.RunwayCornerAnnotationStruct.Point --* scenairo.tools.RunwayCornerAnnotationStruct.RunwayCornerAnnotationStruct : point
scenairo.tools.RunwayCornerAnnotationStruct.RunwayCornerAnnotationStruct --* scenairo.ScenAIro.ScenAIro : runwayCornerAnnotation
scenairo.tools.RunwayCornerAnnotationStruct.StructuredObject --* scenairo.tools.RunwayCornerAnnotationStruct.RunwayCornerAnnotationStruct : structuredObjects
scenairo.tools.services.SimFrameScout.SimFrameScout --* scenairo.tools.CoordSetter.CoordSetter : simFrameDimensions
@enduml
